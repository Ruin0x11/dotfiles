# file:         ~/.bin/dwm-status
# description:  status script for dwm's statusbar
# vim: ft=zsh: fdm=marker:
#!/bin/zsh
date_format="%I:%M%p, %A %d %B"

internet_checker()  # {{{
{
        if host google.com &> /dev/null ; then
        echo -ne "\x07 \x01$(netctl list | awk '/*/ {print $2}')"; else
        echo -ne "\x03 \x01OFF"
        fi
} # }}}

gmail_website_checker() { # {{{
        if host mail.google.com &> /dev/null ; then
        echo "ON"; else 
        echo "OFF"
        fi
} # }}}

get_mem() {
	mem_used="$(free -m | awk 'NR==3 {print $3}')"
	echo -ne " \x07 \x01${mem_used}M\x01"
}

STAT_BEFORE=`cat /proc/stat | head -n 5`


getCoreLoadPercent() {
    CORE=$1

    BEFORE=`echo "$STAT_BEFORE" | grep "^cpu$CORE "`
    AFTER=`echo "$STAT_AFTER" | grep "^cpu$CORE "`

    USER0=`echo "$BEFORE" | awk '{ print $2 }'`
    USER1=`echo "$AFTER" | awk '{ print $2 }'`
    NICE0=`echo "$BEFORE" | awk '{ print $3 }'`
    NICE1=`echo "$AFTER" | awk '{ print $3 }'`
    SYST0=`echo "$BEFORE" | awk '{ print $4 }'`
    SYST1=`echo "$AFTER" | awk '{ print $4 }'`
    IDLE0=`echo "$BEFORE" | awk '{ print $5 }'`
    IDLE1=`echo "$AFTER" | awk '{ print $5 }'`

    USER=`expr $USER1 - $USER0`
    NICE=`expr $NICE1 - $NICE0`
    SYST=`expr $SYST1 - $SYST0`
    IDLE=`expr $IDLE1 - $IDLE0`

    TOTAL=`expr $USER + $NICE + $SYST + $IDLE`
    USED=`expr $USER + $NICE + $SYST`

    echo "$USED * 100 / $TOTAL" | bc
}

getCpuload() {
    STAT_AFTER=`cat /proc/stat | head -n 5`
    CORE0=`getCoreLoadPercent 0`

    STAT_BEFORE=$STAT_AFTER
    if [ $CORE0 -lt 90 ]; then
    echo -ne "\x07\x01 CPU: "
    echo -ne $CORE0%
    else 
    echo -ne "\x07\x01 CPU: "
    echo -ne "\x06$CORE0%"
    fi 
}
getTemp() {
		echo -ne " \x07\x01 "
    CPU_TEMP=`sensors | grep temp1 | awk '{ print $2 }'`
#    echo -ne "CPU: "
    if [ `sensors | grep temp1 | awk '{ print $2 }' | sed 's/.\(.*\)/\1/' | sed 's/\(.*\)..../\1/'` -gt 80 ]; then				
		    echo -ne "\x06$CPU_TEMP"
    else
				echo -ne "$CPU_TEMP"
		fi
}
getVolume() {
    MIXER="Master"
		VOLUME=`amixer sget $MIXER  | grep Mono\: | sed -e s/"  Mono: Playback [0-9]* \["// -e s/"\%.*"//`
		if [ "`amixer -q | grep Mono | awk '{ print $6 }' | grep on | wc -l`" != 1 ]; then
		    echo -ne " \x07¤\x01 $VOLUME%"
    elif [ $VOLUME -lt 10 ]; then
		    echo -ne "\x07£\x01 $VOLUME%"
    elif [ $VOLUME -lt 40 ]; then
		    echo -ne "\x07¢\x01 $VOLUME%"
    elif [ $VOLUME -lt 80 ]; then
		    echo -ne "\x07\x01 $VOLUME%"
		else
		    echo -ne "\x07¡\x01 $VOLUME%"
    fi
}

gmail_notify() # {{{
{
        if [[ $(internet_checker) == ON ]]  ; then
                . $HOME/Documents/gmail # $username and $password here
                curl -s https://"$username":"$password"@mail.google.com/mail/feed/atom &> ${HOME}/.mailcache
                fullcount=$(awk -F '</?fullcount>' 'NF>1{print $2}' ${HOME}/.mailcache)
                if [[ "$fullcount" == '0' ]] ; then
                        echo -e "  \x06 \x07no new emails\x01"
                elif [[ "$fullcount" == '1' ]] ; then
                        echo -e "  \x05 1\x07 new email\x01"
                else echo -e "  \x05 \x05${fullcount}\x01 \x07new emails\x01"
                fi
        fi
} # }}}

date_get() # {{{
{
        date_command=$(date +"$date_format")
        echo -e "\x07 \x01${date_command}"
} # }}}

mpd_check() # {{{
{
         if mpc &> /dev/null && [[ $(mpc | wc -l) != 1 ]]; then
         echo "ON" ; else
         echo "OFF"
         fi
} # }}}

check_mpd_pause() { # {{{
        if [[ $(mpc | awk 'NR==2 {print $1}') == "[paused]" ]] ; then
        echo " ç"
        fi
}      # }}}

mpd_details() { # {{{{
        if [[ $(mpd_check) == ON ]] ; then
        echo -e "\x07ê \x06$(mpc | head -1)\x01\x03$(check_mpd_pause)\x01 \x08$(mpc | awk 'NR==2 {print $3}')\x01"
        fi
} # }}}

get_battery() { # {{{
	CHARGE=`acpi -i | awk 'NR==1 {print $4}' | cut -d "%" -f 1`;
	if [[ $(acpi -i | awk 'NR==1 {print $3}') == "Charging," ]] ; then
		echo -ne "\x07\x01 $CHARGE% "
	elif [[ $CHARGE -lt 10 ]]; then
		echo -ne "\x03 \x01 $CHARGE% "
	elif [[ $CHARGE -lt 30 ]]; then
		echo -ne "\x05\x01 $CHARGE% "
	elif [[ $CHARGE -lt 50 ]]; then
		echo -ne "\x07\x01 $CHARGE% "
	elif [[ $CHARGE -lt 60 ]]; then
		echo -ne "\x07\x01 $CHARGE% "
	elif [[ $CHARGE -lt 70 ]]; then
		echo -ne "\x07\x01 $CHARGE% "
	elif [[ $CHARGE -lt 80 ]]; then
		echo -ne "\x07\x01 $CHARGE% "
	elif [[ $CHARGE -lt 100 ]]; then
		echo -ne "\x07\x01 $CHARGE% "
	else
		echo -ne " $CHARGE% "
	fi
} # }}}

# main
xsetroot -name "$(get_battery)$(internet_checker)$(get_mem)$(getTemp)$(getVolume)$(gmail_notify) $(date_get)"
